parameters:
  harbor:
    =_metadata: {}
    multi_instance: true

    namespace: syn-${_instance}
    release_name: harbor
    charts:
      harbor: 1.7.0

    # fqdn: harbor.example.com
    s3:
      # endpoint: https://s3.example.com
      # bucket: example
      accesskey: '?{vaultkv:${customer:name}/${cluster:name}/${_instance}/s3-accesskey}'
      secretkey: '?{vaultkv:${customer:name}/${cluster:name}/${_instance}/s3-secretkey}'

    # The secret key used for encryption. Must be a string of 16 chars.
    secret_key: '?{vaultkv:${customer:name}/${cluster:name}/${_instance}/secretkey}'

    # see: https://github.com/goharbor/harbor-helm/blob/master/values.yaml
    helm_values:
      expose:
        type: ingress
        ingress:
          hosts:
            core: ${harbor:fqdn}
        tls:
          auto:
            commonName: ${harbor:fqdn}

      externalURL: https://${harbor:fqdn}

      # The persistence is enabled by default and a default StorageClass
      # is needed in the k8s cluster to provision volumes dynamicly.
      # Specify another StorageClass in the "storageClass" or set "existingClaim"
      # if you have already existing persistent volumes to use
      #
      # For storing images and charts, you can also use "azure", "gcs", "s3",
      # "swift" or "oss". Set it in the "imageChartStorage" section
      persistence:
        enabled: true
        # Setting it to "keep" to avoid removing PVCs during a helm delete
        # operation. Leaving it empty will delete PVCs after the chart deleted
        # (this does not apply for PVCs that are created for internal database
        # and redis components, i.e. they are never deleted automatically)
        resourcePolicy: 'keep'
        persistentVolumeClaim:
          registry:
            size: 5Gi
          chartmuseum:
            size: 5Gi
          jobservice:
            size: 1Gi
          database:
            size: 1Gi
          redis:
            size: 1Gi
          trivy:
            size: 5Gi

        imageChartStorage:
          disableredirect: false
          type: s3
          s3:
            region: us-west-1
            bucket: ${harbor:s3:bucket}
            accesskey: ${harbor:s3:accesskey}
            secretkey: ${harbor:s3:secretkey}
            regionendpoint: ${harbor:s3:endpoint}
            secure: true

      # The secret key used for encryption. Must be a string of 16 chars.
      secretKey: ${harbor:secret_key}
      core:
        secret: ${harbor:secret_key}
      jobservice:
        secret: ${harbor:secret_key}
      registry:
        secret: ${harbor:secret_key}

      chartmuseum:
        enabled: false
      trivy:
        enabled: false
      notary:
        enabled: false
      metrics:
        enabled: true
